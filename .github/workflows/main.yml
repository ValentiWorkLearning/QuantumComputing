# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
        with:
          submodules: 'true'
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'
      - name: Install conan
        uses:  BSFishy/pip-action@v1
        with:
          packages: |
            conan
          
      - name : Get the latest CMake version
        uses: lukka/get-cmake@latest

      - name: Run CMakeLists build for MSVC compiler
        uses: lukka/run-cmake@v2
        with:
          cmakeGenerator: VS16Win64
          cmakeListsOrSettingsJson: CMakeListsTxtAdvanced
          cmakeListsTxtPath: ${{ github.workspace }}/CMakeLists.txt
          cmakeBuildType: Debug
          buildDirectory: '${{ runner.workspace }}/build'
          buildWithCMake: false
      - name: Run cmake build for the bin-expresions target
        run: |
          cd ${{ runner.workspace }}/build
          cmake --build . --target SecondFourthTaskSequentialLogic

      - name: Launch simple logic example 1
        run: |
          cd ${{ runner.workspace }}/build//sequential_logic_evaluator//Debug
          .\SecondFourthTaskSequentialLogic.exe ${{ github.workspace }}\sequential_logic_evaluator\examples\simple_gates_1.txt
